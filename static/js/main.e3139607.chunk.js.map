{"version":3,"sources":["api.js","components/StyleSelector.js","images/before.jpg","images/after.png","images/toonvert.svg","utils.js","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["transform","data","axios","post","useStyles","makeStyles","theme","formControl","width","margin","spacing","StyleSelector","props","classes","FormControl","className","InputLabel","htmlFor","Select","value","modelID","onChange","event","setModelID","target","setPercentage","setOpen","image","before","model_id","load_size","LOAD_SIZE","then","response","console","log","setAfter","output","catch","inputProps","name","id","MenuItem","toDataUrl","url","callback","xhr","XMLHttpRequest","onload","reader","FileReader","onloadend","result","readAsDataURL","open","responseType","send","holder","maxWidth","chip","backgroundColor","fontWeight","logo","WIDTH","marginTop","marginLeft","Home","useState","setBefore","after","percentage","useEffect","beforePlaceholder","base64","afterPlaceholder","Box","align","style","textAlign","src","singleImage","buttonText","pictureFiles","pictureDataURL","loadImage","cnv","toDataURL","orientation","canvas","crossOrigin","imgExtension","maxFileSize","aspectRatio","leftImage","rightImage","leftImageLabel","rightImageLabel","sliderPositionPercentage","sliderLineColor","leftImageCss","borderRadius","rightImageCss","Chip","color","label","icon","onClick","triggerBase64Download","Backdrop","zIndex","size","App","Helmet","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3139607.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseUrl = \"https://tbuxfdm545.execute-api.eu-west-3.amazonaws.com/dev/transform\";\r\n\r\nfunction transform(data) {\r\n  return axios.post(baseUrl, data);\r\n}\r\n\r\nexport { transform };\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nimport { transform } from \"../api.js\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    width: \"70%\",\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function StyleSelector(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <FormControl className={classes.formControl}>\r\n      <InputLabel htmlFor=\"age-native-helper\">\r\n        Select a transformer model\r\n      </InputLabel>\r\n      <Select\r\n        value={props.modelID}\r\n        onChange={(event) => {\r\n          props.setModelID(event.target.value);\r\n          props.setPercentage(1);\r\n          props.setOpen(true);\r\n\r\n          const data = {\r\n            image: props.before,\r\n            model_id: event.target.value,\r\n            load_size: props.LOAD_SIZE,\r\n          };\r\n\r\n          transform(data)\r\n            .then((response) => {\r\n              console.log(\"success\");\r\n              console.log(response.data);\r\n              props.setAfter(response.data.output);\r\n              props.setPercentage(0);\r\n              props.setOpen(false);\r\n            })\r\n            .catch((response) => {\r\n              console.log(response);\r\n            });\r\n        }}\r\n        inputProps={{\r\n          name: \"age\",\r\n          id: \"age-native-helper\",\r\n        }}\r\n      >\r\n        <MenuItem value={0}>Hosoda</MenuItem>\r\n        <MenuItem value={1}>Hayao</MenuItem>\r\n        <MenuItem value={2}>Shinkai</MenuItem>\r\n        <MenuItem value={3}>Paprika</MenuItem>\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/before.b830258b.jpg\";","export default __webpack_public_path__ + \"static/media/after.044e1ec0.png\";","export default __webpack_public_path__ + \"static/media/toonvert.a231a1ed.svg\";","function toDataUrl(url, callback) {\r\n  var xhr = new XMLHttpRequest();\r\n  xhr.onload = function () {\r\n    var reader = new FileReader();\r\n    reader.onloadend = function () {\r\n      callback(reader.result);\r\n    };\r\n    reader.readAsDataURL(xhr.response);\r\n  };\r\n  xhr.open(\"GET\", url);\r\n  xhr.responseType = \"blob\";\r\n  xhr.send();\r\n}\r\n\r\nexport { toDataUrl };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport StyleSelector from \"../components/StyleSelector.js\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport DownloadIcon from \"@material-ui/icons/GetApp\";\r\n\r\nimport ImageUploader from \"react-images-upload\";\r\nimport ReactCompareImage from \"react-compare-image\";\r\nimport * as loadImage from \"blueimp-load-image\";\r\n\r\nimport GridLoader from \"react-spinners/GridLoader\";\r\nimport beforePlaceholder from \"../images/before.jpg\";\r\nimport afterPlaceholder from \"../images/after.png\";\r\nimport logo from \"../images/toonvert.svg\";\r\n\r\nimport { triggerBase64Download } from \"react-base64-downloader\";\r\nimport { transform } from \"../api.js\";\r\nimport { toDataUrl } from \"../utils.js\";\r\n\r\nconst LOAD_SIZE = 450;\r\nconst WIDTH = 400;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    width: \"70%\",\r\n    margin: theme.spacing(1),\r\n  },\r\n  holder: {\r\n    width: WIDTH,\r\n    maxWidth: 350,\r\n    margin: 10,\r\n  },\r\n  chip: {\r\n    width: 200,\r\n    backgroundColor: \"#e63946\",\r\n    margin: 10,\r\n    fontWeight: \"bold\",\r\n  },\r\n  logo: {\r\n    width: WIDTH * 0.8,\r\n    marginTop: 10,\r\n    marginLeft: 20,\r\n  },\r\n}));\r\n\r\nexport default function Home() {\r\n  const [before, setBefore] = useState(\"\");\r\n  const [after, setAfter] = useState(\"\");\r\n  const [percentage, setPercentage] = useState(0.5);\r\n  const [modelID, setModelID] = useState(0);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    toDataUrl(beforePlaceholder, (base64) => {\r\n      setBefore(base64);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    toDataUrl(afterPlaceholder, (base64) => {\r\n      setAfter(base64);\r\n    });\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Box align=\"center\">\r\n      <div style={{ textAlign: \"center\", width: \"100%\" }}>\r\n        <img src={logo} className={classes.logo} />\r\n      </div>\r\n      <div className={classes.holder}>\r\n        <StyleSelector\r\n          modelID={modelID}\r\n          setModelID={setModelID}\r\n          setPercentage={setPercentage}\r\n          setOpen={setOpen}\r\n          before={before}\r\n          LOAD_SIZE={LOAD_SIZE}\r\n          setAfter={setAfter}\r\n        />\r\n\r\n        <ImageUploader\r\n          singleImage\r\n          buttonText=\"Choose images\"\r\n          onChange={(pictureFiles, pictureDataURL) => {\r\n            setOpen(true);\r\n            setPercentage(1);\r\n\r\n            loadImage(\r\n              pictureDataURL[0],\r\n              (cnv) => {\r\n                setBefore(cnv.toDataURL());\r\n                setAfter(cnv.toDataURL());\r\n                const data = {\r\n                  image: cnv.toDataURL(),\r\n                  model_id: modelID,\r\n                  load_size: LOAD_SIZE,\r\n                };\r\n                transform(data)\r\n                  .then((response) => {\r\n                    console.log(\"success\");\r\n                    console.log(response.data);\r\n                    setAfter(response.data.output);\r\n                    setPercentage(0.0);\r\n                    setOpen(false);\r\n                  })\r\n                  .catch((response) => {\r\n                    console.log(response);\r\n                  });\r\n              },\r\n              {\r\n                orientation: true,\r\n                canvas: true,\r\n                crossOrigin: \"anonymous\",\r\n                maxWidth: 600,\r\n              }\r\n            );\r\n          }}\r\n          imgExtension={[\".jpg\", \".gif\", \".png\", \".gif\", \"jpeg\"]}\r\n          maxFileSize={5242880}\r\n        />\r\n\r\n        <ReactCompareImage\r\n          aspectRatio=\"wider\"\r\n          leftImage={before}\r\n          rightImage={after}\r\n          leftImageLabel=\"Before\"\r\n          rightImageLabel=\"After\"\r\n          sliderPositionPercentage={percentage}\r\n          sliderLineColor=\"black\"\r\n          leftImageCss={{ borderRadius: 10 }}\r\n          rightImageCss={{ borderRadius: 10 }}\r\n        />\r\n\r\n        <Chip\r\n          color=\"secondary\"\r\n          label=\"Download\"\r\n          className={classes.chip}\r\n          icon={<DownloadIcon style={{ marginTop: 4 }} />}\r\n          onClick={() => {\r\n            triggerBase64Download(after, \"styled_image\");\r\n          }}\r\n        />\r\n      </div>\r\n      <Backdrop\r\n        open={open}\r\n        style={{ zIndex: 999 }}\r\n        onClick={() => {\r\n          setOpen(false);\r\n        }}\r\n      >\r\n        <GridLoader size={30} margin={2} color=\"#e63946\" />\r\n      </Backdrop>\r\n    </Box>\r\n  );\r\n}\r\n","import Home from \"./pages/Home\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Helmet>\r\n        <style>\r\n          {\r\n            \"body, html{ background-color: #F5F5F5; max-width: 100%; overflow-x: hidden}\"\r\n          }\r\n        </style>\r\n      </Helmet>\r\n      <Home />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}